{"version":3,"file":"StatusBarComponent.js","sources":["../../node_modules/react-redux/es/hooks/useStore.js","../../node_modules/react-redux/es/hooks/useDispatch.js","../../src/views/components/StatusBarComponent.jsx"],"sourcesContent":["import { ReactReduxContext } from '../components/Context';\nimport { useReduxContext as useDefaultReduxContext, createReduxContextHook } from './useReduxContext';\n/**\r\n * Hook factory, which creates a `useStore` hook bound to a given context.\r\n *\r\n * @param {React.Context} [context=ReactReduxContext] Context passed to your `<Provider>`.\r\n * @returns {Function} A `useStore` hook bound to the specified context.\r\n */\n\nexport function createStoreHook(context = ReactReduxContext) {\n  const useReduxContext = // @ts-ignore\n  context === ReactReduxContext ? useDefaultReduxContext : // @ts-ignore\n  createReduxContextHook(context);\n  return function useStore() {\n    const {\n      store\n    } = useReduxContext(); // @ts-ignore\n\n    return store;\n  };\n}\n/**\r\n * A hook to access the redux store.\r\n *\r\n * @returns {any} the redux store\r\n *\r\n * @example\r\n *\r\n * import React from 'react'\r\n * import { useStore } from 'react-redux'\r\n *\r\n * export const ExampleComponent = () => {\r\n *   const store = useStore()\r\n *   return <div>{store.getState()}</div>\r\n * }\r\n */\n\nexport const useStore = /*#__PURE__*/createStoreHook();","import { ReactReduxContext } from '../components/Context';\nimport { useStore as useDefaultStore, createStoreHook } from './useStore';\n/**\r\n * Hook factory, which creates a `useDispatch` hook bound to a given context.\r\n *\r\n * @param {React.Context} [context=ReactReduxContext] Context passed to your `<Provider>`.\r\n * @returns {Function} A `useDispatch` hook bound to the specified context.\r\n */\n\nexport function createDispatchHook(context = ReactReduxContext) {\n  const useStore = // @ts-ignore\n  context === ReactReduxContext ? useDefaultStore : createStoreHook(context);\n  return function useDispatch() {\n    const store = useStore(); // @ts-ignore\n\n    return store.dispatch;\n  };\n}\n/**\r\n * A hook to access the redux `dispatch` function.\r\n *\r\n * @returns {any|function} redux store's `dispatch` function\r\n *\r\n * @example\r\n *\r\n * import React, { useCallback } from 'react'\r\n * import { useDispatch } from 'react-redux'\r\n *\r\n * export const CounterComponent = ({ value }) => {\r\n *   const dispatch = useDispatch()\r\n *   const increaseCounter = useCallback(() => dispatch({ type: 'increase-counter' }), [])\r\n *   return (\r\n *     <div>\r\n *       <span>{value}</span>\r\n *       <button onClick={increaseCounter}>Increase counter</button>\r\n *     </div>\r\n *   )\r\n * }\r\n */\n\nexport const useDispatch = /*#__PURE__*/createDispatchHook();","import React from 'react';\n\nfunction StatusBarComponent(props) {\n  const { messageType, message } = props;\n\n  return (\n    <div className={`status-bar card ${messageType}`}>\n      <span>{message}</span>\n    </div>\n  );\n}\n\nexport default StatusBarComponent;\n"],"names":["createStoreHook","context","arguments","length","undefined","ReactReduxContext","useReduxContext","useDefaultReduxContext","createReduxContextHook","_useReduxContext","store","useStore","createDispatchHook","useDefaultStore","dispatch","useDispatch","StatusBarComponent","props","messageType","message","jsx","className","concat","children"],"mappings":"uDASO,SAASA,GAA6C,CAAA,IAA7BC,EAAOC,UAAAC,OAAA,GAAAD,UAAA,CAAA,IAAAE,OAAAF,UAAA,CAAA,EAAGG,EAClCC,EACNL,IAAYI,EAAoBE,EAChCC,EAAuBP,CAAO,EAC9B,OAAO,UAAoB,CACzB,IAAAQ,EAEIH,EAAiB,EADnBI,EAAKD,EAALC,MAGF,OAAOA,EAEX,CAiBO,IAAMC,EAAwBX,EAAiB,EC5B/C,SAASY,GAAgD,CAAA,IAA7BX,EAAOC,UAAAC,OAAA,GAAAD,UAAA,CAAA,IAAAE,OAAAF,UAAA,CAAA,EAAGG,EACrCM,EACNV,IAAYI,EAAoBQ,EAAkBb,EAAgBC,CAAO,EACzE,OAAO,UAAuB,CAC5B,IAAMS,EAAQC,IAEd,OAAOD,EAAMI,SAEjB,KAuBaC,EAA2BH,EAAkB,ECtC1D,SAASI,EAAmBC,EAAO,CAC3B,IAAEC,EAAyBD,EAAzBC,YAAaC,EAAYF,EAAZE,QAGnB,OAAAC,EAAAA,IAAC,OAAIC,UAAWC,mBAAAA,OAAmBJ,CAAW,EAC5CK,SAAAH,EAAA,IAAC,OAAM,CAAAG,SAAAJ,EAAQ,CACjB,CAAA,CAEJ","x_google_ignoreList":[0,1]}