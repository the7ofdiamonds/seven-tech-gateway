{"version":3,"file":"Logout.js","sources":["../../src/views/Logout.jsx"],"sourcesContent":["import { useState, useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport { logout } from '../controllers/logoutSlice';\n\nimport StatusBarComponent from './components/StatusBarComponent';\n\nfunction LogOutComponent() {\n  const dispatch = useDispatch();\n\n  const { logoutSuccessMessage, logoutErrorMessage, logoutError, logoutStatusCode } = useSelector(\n    (state) => state.logout\n  );\n\n  const [showStatusbar, setShowStatusBar] = useState('');\n  const [messageType, setMessageType] = useState('');\n  const [message, setMessage] = useState('');\n\n  useEffect(() => {\n    if (logoutSuccessMessage) {\n      setMessageType('success');\n      setMessage(logoutSuccessMessage);\n    }\n  }, [logoutSuccessMessage]);\n\n  useEffect(() => {\n    if (logoutErrorMessage) {\n      setMessageType('error');\n      setMessage(logoutErrorMessage);\n    }\n  }, [logoutErrorMessage]);\n\n  useEffect(() => {\n    if (logoutError) {\n      setMessageType('error');\n      setMessage(logoutError.message);\n    }\n  }, [logoutError]);\n\n  useEffect(() => {\n    if (logoutStatusCode == 200) {\n      setTimeout(() => {\n        window.location.href = '/';\n      }, 5000);\n    }\n  }, [logoutStatusCode]);\n\n  useEffect(() => {\n    if (message != '') {\n      setShowStatusBar('modal-overlay');\n      setTimeout(() => {\n        setShowStatusBar('');\n      }, 5000);\n    }\n  }, [message]);\n\n  const handleClick = () => {\n    dispatch(logout());\n  };\n\n  return (\n    <>\n      <main className=\"logout\">\n        <button onClick={handleClick}>\n          <h3>LOG OUT</h3>\n        </button>\n\n        <span className={showStatusbar}>\n          {message !== '' && (\n            <StatusBarComponent messageType={messageType} message={message} />\n          )}\n        </span>\n      </main>\n    </>\n  );\n}\n\nexport default LogOutComponent;\n"],"names":["LogOutComponent","dispatch","useDispatch","_useSelector","useSelector","state","logout","logoutSuccessMessage","logoutErrorMessage","logoutError","logoutStatusCode","_useState","useState","_useState2","_slicedToArray","showStatusbar","setShowStatusBar","_useState3","_useState4","messageType","setMessageType","_useState5","_useState6","message","setMessage","useEffect","setTimeout","window","location","href","handleClick","jsx","Fragment","children","jsxs","className","onClick","StatusBarComponent"],"mappings":"8GAOA,SAASA,GAAkB,CACzB,IAAMC,EAAWC,IAEjBC,EAAoFC,EAClF,SAACC,UAAUA,EAAMC,MAAA,CACnB,EAFQC,EAAAJ,EAAAI,qBAAsBC,EAAoBL,EAApBK,mBAAoBC,EAAAN,EAAAM,YAAaC,IAAAA,iBAI/DC,EAA0CC,WAAS,EAAE,EAAAC,EAAAC,EAAAH,EAAA,CAAA,EAA9CI,EAAAF,EAAA,CAAA,EAAeG,EAAgBH,EAAA,CAAA,EACtCI,EAAsCL,WAAS,EAAE,EAAAM,EAAAJ,EAAAG,EAAA,CAAA,EAA1CE,EAAAD,EAAA,CAAA,EAAaE,EAAcF,EAAA,CAAA,EAClCG,EAA8BT,WAAS,EAAE,EAAAU,EAAAR,EAAAO,EAAA,CAAA,EAAlCE,EAAAD,EAAA,CAAA,EAASE,EAAUF,EAAA,CAAA,EAE1BG,EAAAA,UAAU,UAAM,CACVlB,IACFa,EAAe,SAAS,EACxBI,EAAWjB,CAAoB,EAEnC,EAAG,CAACA,CAAoB,CAAC,EAEzBkB,EAAAA,UAAU,UAAM,CACVjB,IACFY,EAAe,OAAO,EACtBI,EAAWhB,CAAkB,EAEjC,EAAG,CAACA,CAAkB,CAAC,EAEvBiB,EAAAA,UAAU,UAAM,CACVhB,IACFW,EAAe,OAAO,EACtBI,EAAWf,EAAYc,OAAO,EAElC,EAAG,CAACd,CAAW,CAAC,EAEhBgB,EAAAA,UAAU,UAAM,CACVf,GAAoB,KACtBgB,WAAW,UAAM,CACfC,OAAOC,SAASC,KAAO,KACtB,GAAI,CAEX,EAAG,CAACnB,CAAgB,CAAC,EAErBe,EAAAA,UAAU,UAAM,CACVF,GAAW,KACbP,EAAiB,eAAe,EAChCU,WAAW,UAAM,CACfV,EAAiB,EAAE,GAClB,GAAI,EAEX,EAAG,CAACO,CAAO,CAAC,EAEZ,IAAMO,EAAc,UAAM,CACxB7B,EAASK,GAAQ,GAGnB,OAEIyB,EAAAA,IAAAC,EAAAA,SAAA,CAAAC,SAAAC,EAAA,KAAC,OAAK,CAAAC,UAAU,SACdF,SAAA,CAAAF,EAAA,IAAC,UAAOK,QAASN,EACfG,SAACF,EAAA,IAAA,KAAA,CAAGE,mBAAO,CACb,CAAA,EAEAF,EAAA,IAAC,OAAK,CAAAI,UAAWpB,EACdkB,SAAAV,IAAY,IACVQ,EAAAA,IAAAM,EAAA,CAAmBlB,YAAAA,EAA0BI,QAAAA,EAAkB,CAEpE,CAAA,CAAA,EACF,CACF,CAAA,CAEJ"}