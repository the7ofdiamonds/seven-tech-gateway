{"version":3,"file":"Dashboard.js","sources":["../../src/controllers/accountSlice.js","../../src/views/Dashboard.jsx"],"sourcesContent":["import { createSlice, createAsyncThunk, isAnyOf } from '@reduxjs/toolkit';\nimport { isValidUsername, isValidPassword, isValidConfirmationCode } from '../utils/Validation';\n\nconst unlockAccountUrl = import.meta.env.VITE_BACKEND_URL ? import.meta.env.VITE_BACKEND_URL + \"/unlock-account\" : \"/wp-json/seven-tech/v1/users/unlock-account\";\nconst removeAccountUrl = import.meta.env.VITE_BACKEND_URL ? import.meta.env.VITE_BACKEND_URL + \"/remove-account\" : \"/wp-json/seven-tech/v1/users/remove-account\";\n\nconst initialState = {\n    accountLoading: false,\n    accountError: '',\n    accountSuccessMessage: '',\n    accountErrorMessage: ''\n};\n\nexport const unlockAccount = createAsyncThunk('account/unlockAccount', async ({ username, password, confirmationCode }) => {\n    try {\n\n        if (isValidUsername(username) == false) {\n            throw new Error(\"Username is not valid.\");\n        }\n\n        if (isValidPassword(password) == false) {\n            throw new Error(\"Password is not valid.\");\n        }\n\n        if (isValidConfirmationCode(confirmationCode) == false) {\n            throw new Error(\"Confirmation Code is not valid.\");\n        }\n\n        const response = await fetch(`${unlockAccountUrl}`, {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json'\n            },\n            body: JSON.stringify({\n                \"username\": username,\n                \"password\": password,\n                \"confirmationCode\": confirmationCode\n            })\n        });\n\n        const responseData = await response.json();\n        return responseData;\n    } catch (error) {\n        console.error(error)\n        throw error;\n    }\n});\n\nexport const removeAccount = createAsyncThunk('account/removeAccount', async ({ username, password, confirmationCode }) => {\n    try {\n\n        if (isValidUsername(username) == false) {\n            throw new Error(\"Username is not valid.\");\n        }\n\n        if (isValidPassword(password) == false) {\n            throw new Error(\"Password is not valid.\");\n        }\n\n        if (isValidConfirmationCode(confirmationCode) == false) {\n            throw new Error(\"Confirmation Code is not valid.\");\n        }\n\n        const response = await fetch(`${removeAccountUrl}`, {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json'\n            },\n            body: JSON.stringify({\n                \"username\": username,\n                \"password\": password,\n                \"confirmationCode\": confirmationCode\n            })\n        });\n\n        const responseData = await response.json();\n        return responseData;\n    } catch (error) {\n        console.error(error)\n        throw error;\n    }\n});\n\nexport const accountSlice = createSlice({\n    name: 'account',\n    initialState,\n    reducers: {},\n    extraReducers: (builder) => {\n        builder\n            .addMatcher(isAnyOf(\n                unlockAccount.fulfilled,\n                removeAccount.fulfilled\n            ), (state, action) => {\n                state.accountLoading = false;\n                state.accountError = '';\n                state.accountSuccessMessage = action.payload.successMessage;\n                state.accountErrorMessage = action.payload.errorMessage;\n            })\n            .addMatcher(isAnyOf(\n                unlockAccount.pending,\n                removeAccount.pending\n            ), (state) => {\n                state.accountLoading = true;\n                state.accountError = null;\n                state.accountSuccessMessage = null;\n                state.accountErrorMessage = null;\n            })\n            .addMatcher(isAnyOf(\n                unlockAccount.rejected,\n                removeAccount.rejected\n            ), (state, action) => {\n                state.accountLoading = false;\n                state.accountError = action.error;\n                state.accountErrorMessage = action.error;\n            });\n    }\n})\n\nexport default accountSlice;","import { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport {\n  changeName,\n  changeUsername,\n  changePhone,\n} from '../controllers/changeSlice';\nimport { changePassword, forgotPassword } from '../controllers/passwordSlice';\nimport { logout, logoutAllUrl, logoutAll } from '../controllers/logoutSlice';\nimport { removeAccount } from '../controllers/accountSlice';\nimport LoginComponent from '../views/Login';\n\nfunction Dashboard() {\n  const dispatch = useDispatch();\n  const { profileImage, displayName } = useSelector((state) => state.login);\n\n  const profileImg = profileImage\n    ? profileImage\n    : localStorage.getItem('profile_image');\n  const usersDisplayName = displayName\n    ? displayName\n    : localStorage.getItem('display_name');\n\n  const { changeName, changePhone, changeUsername } = useSelector(\n    (state) => state.change\n  );\n  const { removeEmail } = useSelector((state) => state.email);\n  const { changePassword } = useSelector((state) => state.password);\n  const { logoutSuccessMessage, logoutErrorMessage } = useSelector(\n    (state) => state.logout\n  );\n\n  const [messageType, setMessageType] = useState('');\n  const [message, setMessage] = useState('');\n\n  useEffect(() => {\n    if (logoutSuccessMessage) {\n      setMessageType('success');\n      setMessage(logoutSuccessMessage);\n    }\n  }, [logoutSuccessMessage]);\n\n  useEffect(() => {\n    if (logoutErrorMessage) {\n      setMessageType('error');\n      setMessage(logoutErrorMessage);\n    }\n  }, [logoutErrorMessage]);\n\n  const handleChangeName = () => {\n    dispatch(changeName());\n  };\n  const firstname = 'Jamel';\n  const lastname = 'Lyons';\n\n  {\n    /* Create Change Title (roles) */\n  }\n\n  const handleChangeUsername = () => {\n    dispatch(changeUsername());\n  };\n  const username = 'TestUser';\n\n  const handleChangePassword = () => {\n    dispatch(changePassword());\n  };\n\n  const handleForgotPassword = (e) => {\n    e.preventDefault();\n    if (email != '' && localStorage.getItem('email') != '') {\n      dispatch(forgotPassword(email ? email : localStorage.getItem('email')));\n    } else {\n      setMessageType('error');\n      setMessage('An email is required to reset password.');\n    }\n  };\n\n  const handleChangePhone = () => {\n    dispatch(changePhone());\n  };\n  const phone = 7186172583;\n\n  const handleRemoveEmail = () => {\n    dispatch(removeEmail());\n  };\n  const email = 'jamel.c.lyons@gmail.com';\n\n  const handleLogout = () => {\n    dispatch(logout()).then(() => {\n      setTimeout(() => {\n        window.location.href = '/';\n      }, 5000);\n    });\n  };\n\n  const handleLogoutAll = () => {\n    if (logoutAllUrl != null) {\n      dispatch(logoutAll()).then(() => {\n        setTimeout(() => {\n          window.location.href = '/';\n        }, 5000);\n      });\n    }\n  };\n\n  const handleRemoveAccount = () => {\n    dispatch(removeAccount());\n  };\n\n  return (\n    <>\n      <section className=\"dashboard\">\n        <h2 className=\"title\">Dashboard</h2>\n        <div>\n          <div>\n            <img src={`${profileImg}`} alt=\"\" />\n          </div>\n          <span>{usersDisplayName}</span>\n        </div>\n\n        <table>\n          <thead>\n            <th>\n              <h2>Settings</h2>\n            </th>\n          </thead>\n\n          <tbody>\n            <tr>\n              <td>\n                <form action=\"\">\n                  <table>\n                    <thead></thead>\n                    <tbody>\n                      <tr className=\"change-name\">\n                        <input\n                          type=\"text\"\n                          name=\"firstname\"\n                          placeholder=\"First Name\"\n                          value={firstname}\n                          onChange={handleChangeName}\n                        />\n\n                        <input\n                          type=\"text\"\n                          name=\"lastname\"\n                          placeholder=\"Last Name\"\n                          value={lastname}\n                          onChange={handleChangeName}\n                        />\n\n                        <button onClick={handleChangeName}>\n                          <h3>Change Name</h3>\n                        </button>\n                      </tr>\n\n                      <tr>{/* Create Change Title (roles) */}</tr>\n\n                      <tr className=\"change-username\">\n                        <input\n                          type=\"text\"\n                          name=\"username\"\n                          placeholder=\"Username\"\n                          value={username}\n                          onChange={handleChangeUsername}\n                        />\n\n                        <button onClick={handleChangeUsername}>\n                          <h3>Change Username</h3>\n                        </button>\n                      </tr>\n\n                      <tr className=\"change-password\">\n                        <input\n                          type=\"password\"\n                          name=\"password\"\n                          placeholder=\"Password\"\n                          value={''}\n                          onChange={handleChangePassword}\n                        />\n\n                        <input\n                          type=\"password\"\n                          name=\"confirmPassword\"\n                          placeholder=\"Confirm Password\"\n                          value={''}\n                          onChange={handleChangePassword}\n                        />\n\n                        <button onClick={handleChangePassword}>\n                          <h3>Change Password</h3>\n                        </button>\n                      </tr>\n\n                      <tr className=\"forgot-password\">\n                        <button onClick={handleForgotPassword}>\n                          <h3>Forgot Password</h3>\n                        </button>\n                      </tr>\n\n                      <tr className=\"change-phone\">\n                        <input\n                          type=\"text\"\n                          name=\"phone\"\n                          placeholder=\"Phone Number\"\n                          value={phone}\n                          onChange={handleChangePhone}\n                        />\n\n                        <button onClick={handleChangePhone}>\n                          <h3>Change Phone</h3>\n                        </button>\n                      </tr>\n\n                      <tr className=\"remove-email\">\n                        <input\n                          type=\"text\"\n                          name=\"email\"\n                          placeholder=\"Email\"\n                          value={email}\n                          onChange={handleRemoveEmail}\n                        />\n\n                        <button onClick={handleRemoveEmail}>\n                          <h3>Remove Email</h3>\n                        </button>\n                      </tr>\n                    </tbody>\n                  </table>\n                </form>\n              </td>\n            </tr>\n\n            <tr className=\"logout\">\n              <button onClick={handleLogout}>\n                <h3>LOG OUT</h3>\n              </button>\n\n              {logoutAllUrl != null && (\n                <button onClick={handleLogoutAll}>\n                  <h3>LOG OUT ALL</h3>\n                </button>\n              )}\n            </tr>\n\n            <tr className=\"remove-account\">\n              <button onClick={handleRemoveAccount}>\n                <h3>REMOVE ACCOUNT</h3>\n              </button>\n            </tr>\n          </tbody>\n\n          <tfoot>\n            {message !== '' && (\n              <div className={`status-bar card ${messageType}`}>\n                <span>{message}</span>\n              </div>\n            )}\n          </tfoot>\n        </table>\n      </section>\n      {/* Login pop up */}\n      {/* <LoginComponent /> */}\n    </>\n  );\n}\n\nexport default Dashboard;\n"],"names":["define_import_meta_env_default","VITE_API_KEY","VITE_AUTH_DOMAIN","VITE_DATABASE_URL","VITE_PROJECT_ID","VITE_STORAGE_BUCKET","VITE_MESSAGING_SENDER_ID","VITE_APP_ID","VITE_MEASUREMENT_ID","BASE_URL","MODE","DEV","PROD","SSR","Dashboard","dispatch","useDispatch","_useSelector","useSelector","state","login","profileImage","displayName","profileImg","localStorage","getItem","usersDisplayName","_useSelector2","change","changeName","changePhone","changeUsername","_useSelector3","email","removeEmail","_useSelector4","password","changePassword","_useSelector5","logout","logoutSuccessMessage","logoutErrorMessage","_useState","useState","_useState2","_slicedToArray","messageType","setMessageType","_useState3","_useState4","message","setMessage","useEffect","handleChangeName","firstname","lastname","handleChangeUsername","username","handleChangePassword","handleForgotPassword","e","preventDefault","forgotPassword","handleChangePhone","phone","handleRemoveEmail","handleLogout","then","setTimeout","window","location","href","handleLogoutAll","logoutAllUrl","logoutAll","handleRemoveAccount","removeAccount","jsx","Fragment","children","jsxs","className","src","concat","alt","action","type","name","placeholder","value","onChange","onClick"],"mappings":"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"}