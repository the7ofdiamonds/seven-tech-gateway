{"version":3,"file":"Dashboard.js","sources":["../../src/controllers/accountSlice.js","../../src/views/Dashboard.jsx"],"sourcesContent":["import { createSlice, createAsyncThunk, isAnyOf } from '@reduxjs/toolkit';\nimport { isValidUsername, isValidPassword, isValidConfirmationCode } from '../utils/Validation';\n\nconst unlockAccountUrl = import.meta.env.VITE_BACKEND_URL ? import.meta.env.VITE_BACKEND_URL + \"/unlock-account\" : \"/wp-json/seven-tech/v1/users/unlock-account\";\nconst removeAccountUrl = import.meta.env.VITE_BACKEND_URL ? import.meta.env.VITE_BACKEND_URL + \"/remove-account\" : \"/wp-json/seven-tech/v1/users/remove-account\";\n\nconst initialState = {\n    accountLoading: false,\n    accountError: '',\n    accountSuccessMessage: '',\n    accountErrorMessage: ''\n};\n\nexport const unlockAccount = createAsyncThunk('account/unlockAccount', async ({ username, password, confirmationCode }) => {\n    try {\n\n        if (isValidUsername(username) == false) {\n            throw new Error(\"Username is not valid.\");\n        }\n\n        if (isValidPassword(password) == false) {\n            throw new Error(\"Password is not valid.\");\n        }\n\n        if (isValidConfirmationCode(confirmationCode) == false) {\n            throw new Error(\"Confirmation Code is not valid.\");\n        }\n\n        const response = await fetch(`${unlockAccountUrl}`, {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json'\n            },\n            body: JSON.stringify({\n                \"username\": username,\n                \"password\": password,\n                \"confirmationCode\": confirmationCode\n            })\n        });\n\n        const responseData = await response.json();\n        return responseData;\n    } catch (error) {\n        console.error(error)\n        throw error;\n    }\n});\n\nexport const removeAccount = createAsyncThunk('account/removeAccount', async ({ username, password, confirmationCode }) => {\n    try {\n\n        if (isValidUsername(username) == false) {\n            throw new Error(\"Username is not valid.\");\n        }\n\n        if (isValidPassword(password) == false) {\n            throw new Error(\"Password is not valid.\");\n        }\n\n        if (isValidConfirmationCode(confirmationCode) == false) {\n            throw new Error(\"Confirmation Code is not valid.\");\n        }\n\n        const response = await fetch(`${removeAccountUrl}`, {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json'\n            },\n            body: JSON.stringify({\n                \"username\": username,\n                \"password\": password,\n                \"confirmationCode\": confirmationCode\n            })\n        });\n\n        const responseData = await response.json();\n        return responseData;\n    } catch (error) {\n        console.error(error)\n        throw error;\n    }\n});\n\nexport const accountSlice = createSlice({\n    name: 'account',\n    initialState,\n    reducers: {},\n    extraReducers: (builder) => {\n        builder\n            .addMatcher(isAnyOf(\n                unlockAccount.fulfilled,\n                removeAccount.fulfilled\n            ), (state, action) => {\n                state.accountLoading = false;\n                state.accountError = '';\n                state.accountSuccessMessage = action.payload.successMessage;\n                state.accountErrorMessage = action.payload.errorMessage;\n            })\n            .addMatcher(isAnyOf(\n                unlockAccount.pending,\n                removeAccount.pending\n            ), (state) => {\n                state.accountLoading = true;\n                state.accountError = null;\n                state.accountSuccessMessage = null;\n                state.accountErrorMessage = null;\n            })\n            .addMatcher(isAnyOf(\n                unlockAccount.rejected,\n                removeAccount.rejected\n            ), (state, action) => {\n                state.accountLoading = false;\n                state.accountError = action.error;\n                state.accountErrorMessage = action.error;\n            });\n    }\n})\n\nexport default accountSlice;","import { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport { logout, logoutAllUrl, logoutAll } from '../controllers/logoutSlice';\nimport { removeAccount } from '../controllers/accountSlice';\n\nfunction Dashboard() {\n  const dispatch = useDispatch();\n  const { profileImage, displayName } = useSelector((state) => state.login);\n\n  const profileImg = profileImage\n    ? profileImage\n    : localStorage.getItem('profile_image');\n  const usersDisplayName = displayName\n    ? displayName\n    : localStorage.getItem('display_name');\n\n  const { changeName, changePhone, changeUsername } = useSelector(\n    (state) => state.change\n  );\n  const { removeEmail } = useSelector((state) => state.email);\n  const { changePassword } = useSelector((state) => state.password);\n  const { logoutSuccessMessage, logoutErrorMessage } = useSelector(\n    (state) => state.logout\n  );\n\n  const [messageType, setMessageType] = useState('');\n  const [message, setMessage] = useState('');\n\n  useEffect(() => {\n    if (logoutSuccessMessage) {\n      setMessageType('success');\n      setMessage(logoutSuccessMessage);\n    }\n  }, [logoutSuccessMessage]);\n\n  useEffect(() => {\n    if (logoutErrorMessage) {\n      setMessageType('error');\n      setMessage(logoutErrorMessage);\n    }\n  }, [logoutErrorMessage]);\n\n  const handleChangeName = () => {\n    dispatch(changeName());\n  };\n\n  {\n    /* Create Change Title (roles) */\n  }\n\n  const handleChangeUsername = () => {\n    dispatch(changeUsername());\n  };\n\n  const handleChangePassword = () => {\n    dispatch(changePassword());\n  };\n\n  {\n    /* Forgot password button */\n  }\n\n  const handleForgotPassword = () => {\n    dispatch(forgotPassword());\n  };\n\n  const handlePhone = () => {\n    dispatch(changePhone());\n  };\n\n  const handleRemoveEmail = () => {\n    dispatch(removeEmail());\n  };\n\n  const handleRemoveAccount = () => {\n    dispatch(removeAccount());\n  };\n\n  const handleLogout = () => {\n    dispatch(logout()).then(() => {\n      setTimeout(() => {\n        window.location.href = '/';\n      }, 5000);\n    });\n  };\n\n  const handleLogoutAll = () => {\n    if (logoutAllUrl != null) {\n      dispatch(logoutAll()).then(() => {\n        setTimeout(() => {\n          window.location.href = '/';\n        }, 5000);\n      });\n    }\n  };\n\n  return (\n    <section className=\"dashboard\">\n      <h2 className=\"title\">Dashboard</h2>\n      <div>\n        <div>\n          <img src={`${profileImg}`} alt=\"\" />\n        </div>\n        <span>{usersDisplayName}</span>\n      </div>\n\n      <div>\n        {/* Change Name */}\n\n        {/* Create Change Title (roles) */}\n\n        {/* Chanage Username */}\n\n        {/* Change Password */}\n\n        {/* Forgot password button */}\n\n        {/* Change Phone */}\n\n        {/* Remove Email */}\n\n        {/* Delete (remove) Account */}\n      </div>\n\n      <div>\n        <div>\n          <button onClick={handleLogout}>\n            <h3>LOG OUT</h3>\n          </button>\n\n          {logoutAllUrl != null && (\n            <button onClick={handleLogoutAll}>\n              <h3>LOG OUT ALL</h3>\n            </button>\n          )}\n        </div>\n\n        {message !== '' && (\n          <div className={`status-bar card ${messageType}`}>\n            <span>{message}</span>\n          </div>\n        )}\n      </div>\n    </section>\n  );\n}\n\nexport default Dashboard;\n"],"names":["define_import_meta_env_default","VITE_API_KEY","VITE_AUTH_DOMAIN","VITE_DATABASE_URL","VITE_PROJECT_ID","VITE_STORAGE_BUCKET","VITE_MESSAGING_SENDER_ID","VITE_APP_ID","VITE_MEASUREMENT_ID","BASE_URL","MODE","DEV","PROD","SSR","Dashboard","dispatch","useDispatch","_useSelector","useSelector","state","login","profileImage","displayName","profileImg","localStorage","getItem","usersDisplayName","_useSelector2","change","changeName","changePhone","changeUsername","_useSelector3","email","removeEmail","_useSelector4","password","changePassword","_useSelector5","logout","logoutSuccessMessage","logoutErrorMessage","_useState","useState","_useState2","_slicedToArray","messageType","setMessageType","_useState3","_useState4","message","setMessage","useEffect","handleLogout","then","setTimeout","window","location","href","handleLogoutAll","logoutAllUrl","logoutAll","jsxs","className","children","jsx","src","concat","alt","onClick"],"mappings":"0KAAA,IAACA,EAAA,CAAAC,aAAgB,0CAA2CC,iBAAoB,+BAAgCC,kBAAqB,sCAAuCC,gBAAmB,eAAgBC,oBAAuB,2BAA4BC,yBAA4B,gBAAiBC,YAAe,6CAA8CC,oBAAuB,eAAgBC,SAAY,IAAKC,KAAQ,aAAcC,IAAO,GAAOC,KAAQ,GAAMC,IAAO,EAAK,qgFCMle,SAASC,GAAY,CACnB,IAAMC,EAAWC,IACXC,EAAgCC,EAAY,SAACC,EAAA,CAAA,OAAUA,EAAMC,MAAK,EAAhEC,IAAAA,aAAcC,EAAYL,EAAZK,YAEhBC,EAAaF,GAEfG,aAAaC,QAAQ,eAAe,EAClCC,EAAmBJ,GAErBE,aAAaC,QAAQ,cAAc,EAEvCE,EAAoDT,EAClD,SAACC,UAAUA,EAAMS,MAAA,CACnB,EAFQD,EAAAE,WAAyBF,EAAbG,YAAaH,EAAAI,eAGjC,IAAAC,EAAwBd,EAAY,SAACC,EAAA,CAAA,OAAUA,EAAMc,MAAK,EAAtCD,EAAZE,YACR,IAAAC,EAA2BjB,EAAY,SAACC,EAAA,CAAA,OAAUA,EAAMiB,SAAQ,EAAzCD,EAAfE,eACF,IAAAC,EAA+CpB,EACnD,SAACC,UAAUA,EAAMoB,MAAA,CACnB,EAFQC,EAAsBF,EAAtBE,qBAAsBC,EAAAH,EAAAG,mBAI9BC,EAAsCC,WAAS,EAAE,EAAAC,EAAAC,EAAAH,EAAA,CAAA,EAA1CI,EAAAF,EAAA,CAAA,EAAaG,EAAcH,EAAA,CAAA,EAClCI,EAA8BL,WAAS,EAAE,EAAAM,EAAAJ,EAAAG,EAAA,CAAA,EAAlCE,EAAAD,EAAA,CAAA,EAASE,EAAUF,EAAA,CAAA,EAE1BG,EAAAA,UAAU,UAAM,CACVZ,IACFO,EAAe,SAAS,EACxBI,EAAWX,CAAoB,EAEnC,EAAG,CAACA,CAAoB,CAAC,EAEzBY,EAAAA,UAAU,UAAM,CACVX,IACFM,EAAe,OAAO,EACtBI,EAAWV,CAAkB,EAEjC,EAAG,CAACA,CAAkB,CAAC,EAsCvB,IAAMY,EAAe,UAAM,CACzBtC,EAASwB,EAAO,CAAC,EAAEe,KAAK,UAAM,CAC5BC,WAAW,UAAM,CACfC,OAAOC,SAASC,KAAO,KACtB,GAAI,CACT,CAAC,GAGGC,EAAkB,UAAM,CACxBC,GAAgB,MAClB7C,EAAS8C,EAAU,CAAC,EAAEP,KAAK,UAAM,CAC/BC,WAAW,UAAM,CACfC,OAAOC,SAASC,KAAO,KACtB,GAAI,CACT,CAAC,GAKH,OAAAI,EAAAA,KAAC,UAAQ,CAAAC,UAAU,YACjBC,SAAA,CAACC,EAAA,IAAA,KAAA,CAAGF,UAAU,QAAQC,SAAS,WAAA,CAAA,SAC9B,MACC,CAAAA,SAAA,CAACC,EAAA,IAAA,MAAA,CACCD,eAAC,MAAI,CAAAE,IAAAC,GAAAA,OAAQ5C,CAAU,EAAI6C,IAAI,GAAG,CACpC,CAAA,EACAH,EAAA,IAAC,QAAMD,SAAiBtC,CAAA,CAAA,CAAA,CAC1B,CAAA,QAEC,MAgBD,CAAA,CAAA,SAEC,MACC,CAAAsC,SAAA,CAAAF,EAAA,KAAC,MACC,CAAAE,SAAA,CAAAC,EAAA,IAAC,UAAOI,QAAShB,EACfW,SAACC,EAAA,IAAA,KAAA,CAAGD,mBAAO,CACb,CAAA,EAECJ,GAAgB,MACdK,EAAAA,IAAA,SAAA,CAAOI,QAASV,EACfK,SAAAC,EAAA,IAAC,KAAG,CAAAD,SAAA,cAAW,CACjB,CAAA,CAAA,CAEJ,CAAA,EAECd,IAAY,IACXe,EAAAA,IAAC,MAAI,CAAAF,UAAAI,mBAAAA,OAA8BrB,CAAW,EAC5CkB,SAAAC,EAAA,IAAC,OAAM,CAAAD,SAAAd,EAAQ,CACjB,CAAA,CAAA,CAEJ,CAAA,CAAA,CACF,CAAA,CAEJ"}