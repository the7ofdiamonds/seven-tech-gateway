{"version":3,"file":"RemoveAccount.js","sources":["../../src/views/RemoveAccount.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport {\n  isValidConfirmationCode,\n  isValidEmail,\n  isValidPassword,\n} from '../utils/Validation';\n\nimport { removeAccount } from '../controllers/accountSlice';\n\nimport StatusBarComponent from './components/StatusBarComponent';\n\nfunction RemoveAcount() {\n  const { emailEncoded, confirmationCode } = useParams();\n\n  const dispatch = useDispatch();\n\n  const { accountSuccessMessage, accountErrorMessage, accountStatusCode } =\n    useSelector((state) => state.account);\n\n  const [email, setEmail] = useState(emailEncoded.replace(/%40/g, '@'));\n  const [password, setPassword] = useState('');\n  const [showStatusbar, setShowStatusBar] = useState('');\n  const [message, setMessage] = useState('');\n  const [messageType, setMessageType] = useState('');\n\n  useEffect(() => {\n    if (email == '' || email == undefined) {\n      setMessageType('error');\n      setMessage('Email is not valid.');\n    }\n\n    if (isValidEmail(email) != true) {\n      setMessageType('error');\n      setMessage('Enter your email to remove your account.');\n    }\n  }, [email]);\n\n  useEffect(() => {\n    if (password == '' || password == undefined) {\n      setMessage('Enter your password to remove account.');\n      setMessageType('error');\n    }\n  }, [password]);\n\n  useEffect(() => {\n    if (accountStatusCode != 403 && message != '') {\n      setShowStatusBar('modal-overlay');\n      setTimeout(() => {\n        setShowStatusBar(true);\n      }, 3000);\n    }\n  }, [accountStatusCode, message]);\n\n  useEffect(() => {\n    if (accountSuccessMessage) {\n      setMessage(accountSuccessMessage);\n      setMessageType('success');\n    }\n  }, [accountSuccessMessage]);\n\n  useEffect(() => {\n    if (accountErrorMessage) {\n      console.log(accountErrorMessage);\n\n      setMessage(accountErrorMessage);\n      setMessageType('error');\n    }\n  }, [accountErrorMessage]);\n\n  const handleChangeEmail = (e) => {\n    e.preventDefault();\n\n    setEmail(e.target.value);\n  };\n\n  const handleChangePassword = (e) => {\n    e.preventDefault();\n\n    setPassword(e.target.value);\n  };\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n\n    if (\n      isValidEmail(email) &&\n      isValidConfirmationCode(confirmationCode) &&\n      isValidPassword(password)\n    ) {\n      dispatch(removeAccount({ email, password, confirmationCode }));\n    }\n  };\n\n  return (\n    <>\n      <main>\n        <form action=\"\">\n          <table>\n            <thead></thead>\n            <tbody>\n              <tr>\n                <td>\n                  <input\n                    type=\"text\"\n                    name=\"email\"\n                    placeholder=\"Email\"\n                    onChange={handleChangeEmail}\n                    value={email}\n                    required\n                  />\n                </td>\n              </tr>\n              <tr>\n                <td>\n                  <input\n                    type=\"password\"\n                    name=\"password\"\n                    placeholder=\"Password\"\n                    onChange={handleChangePassword}\n                    required\n                  />\n                </td>\n              </tr>\n            </tbody>\n            <tfoot>\n              <tr>\n                <td>\n                  <button type=\"submit\" onClick={handleSubmit}>\n                    <h3>CONFIRM</h3>\n                  </button>\n                </td>\n              </tr>\n              <tr>\n                <td>\n                  <span className={showStatusbar}>\n                    {message !== '' && (\n                      <StatusBarComponent\n                        messageType={messageType}\n                        message={message}\n                      />\n                    )}\n                  </span>\n                </td>\n              </tr>\n            </tfoot>\n          </table>\n        </form>\n      </main>\n    </>\n  );\n}\n\nexport default RemoveAcount;\n"],"names":["RemoveAcount","_useParams","useParams","emailEncoded","confirmationCode","dispatch","useDispatch","_useSelector","useSelector","state","account","accountSuccessMessage","accountErrorMessage","accountStatusCode","_useState","useState","replace","_useState2","_slicedToArray","email","setEmail","_useState3","_useState4","password","setPassword","_useState5","_useState6","showStatusbar","setShowStatusBar","_useState7","_useState8","message","setMessage","_useState9","_useState10","messageType","setMessageType","useEffect","isValidEmail","setTimeout","console","log","handleChangeEmail","e","preventDefault","target","value","handleChangePassword","handleSubmit","isValidConfirmationCode","isValidPassword","removeAccount","jsx","Fragment","children","action","type","name","placeholder","onChange","required","onClick","className","StatusBarComponent"],"mappings":"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"}